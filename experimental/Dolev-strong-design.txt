Setting:
	# Dolev-strong_standard
	communication = synchronous
	channels = pairwise_channels
	has_PKI = true
	use_ideal_signature = true

	need_input_variable(input : int, f : int)
	
Environment:
	am_I_sender()
		return my_id == 0 ?
	
	get_input()
		if am_I_sender()
			return input
	
	get_f()
		return f

Protocol:

	validate(msg)
		if not msg.validate_signature
			return false
		chain = msg.signature_ids
		if chain.length != current_round
			return false
		if has_duplicate(chain)
			return false
		if my_id in chain
			return false
		if chain[0] != sender_id
			return false
		return true

	Round 0:
		extr = {}
		if am_I_sender()
			send_to_all(sign(get_input()))
	Round r = 1 to f + 1:
		receive_messages()
		for msg in received_messages:
			if validate(msg)
				b = msg.content
				if b not in extr
					extr.put(b)
				send_to_all(sign(msg))
	Round f + 1:
		if len(extr) == 1
			output = extr[0]
		else
			output = 0

Measurements:
	Agreement:
		concensus = None
		for node in nodes
			if not corrupted node
				if node.output is not in {0, 1}
					return false
				else if concensus is None
					concensus = node.output
				else if concensus != node.output
					return false
		return true
	
	Validity:
		if not corrupted sender
			for node in nodes
				if not corrupted node
					if node.output != environment.input
						return false
		return true

Adversary:
	
	Adversary Setting:
		corruption = static
		corruption_count = f
		error_type = byzantine	

		need_input_variable(f : int)

	Adversary Logic:
		
		pick_nodes:
			return corrupt_list = [0..f - 1]

		Round i < f:
			behave_honestly()

		Round f:
			gather_control()
			msg = sign_with_id(!b, sender_id)
			for id in corrupt_list
				if id != sender_id
				msg = sign_with_id(msg, id)
			honest = all - corrupt
			honest_half = [(len(honest) / 2):]
			send_message_to_list(msg, honest_half)

Test:
	With code:
		parameter_list = {n = 100 f = 0..99 input = 1}
		run_experiments(parameter_list, dolve_strong, dolve_strong_adversary)
	
	In commandline:
		edel test dolve_strong 100 0..99 1 dolve_strong_adversary
	
	Output: (in imaginary)
		Run #11:
		Parameters: n = 100, f = 10, input = 1
		Time: xxx ms
		Result:
		Agreement true
		Validity tre


		
